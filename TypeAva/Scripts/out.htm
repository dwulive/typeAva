<!DOCTYPE html>
<html>
<head>
<title>JSLint Report 2013-09-26T10:41:27</title>
<style>
body {
    font-family: Tahoma, Verdana, sans-serif;
    font-size: 75%;
}

h2 {
    background-color: #cd5c5c;
    color: #ffffff;
    padding: 4px 8px;
}

cite {
    background-color: #eeeeee;
    display: block;
    padding: 4px 8px;
    font-style: normal;
}

address {
    float: right;
    color: #999999;
}

</style>
</head>
<body>
    <h1>JSLint Report 2013-09-26T10:41:27</h1>
    <dl>
        <dt>Source Directory:</dt>
        <dd>C:\source\TypeAva\TypeAva\Scripts</dd>
        <dt>Settings File:</dt>
        <dd>None</dd>
        <dt>Processed Files:</dt>
        <dd>2</dd>
        <dt>Files with Errors:</dt>
        <dd>2</dd>
        <dt>Total Errors:</dt>
        <dd>56</dd>
    </dl>
    <h2>\178199.user.js (21 errors)</h2>
    <cite><address>line 11 character 4</address>Use spaces, not tabs.</cite><pre> * 			removed from BBCode the !LoU.slap and other commands as they allow an anonymous person to determine your online status.</pre><cite><address>line 13 character 4</address>Use spaces, not tabs.</cite><pre> * 			changes to incoming attacks window.  now makes use of alliance faith and displayed % is the research required by the</pre><cite><address>line 14 character 4</address>Use spaces, not tabs.</cite><pre> * 			attacking player.  - is displayed if it is believed the attack is not possible with that troop type.  a ship column has</pre><cite><address>line 15 character 4</address>Use spaces, not tabs.</cite><pre> * 			been added.  can only verify ship attacks if you are the target.  seperate requests are made to determine if</pre><cite><address>line 16 character 4</address>Use spaces, not tabs.</cite><pre> * 			source and target cities are on water.  data may not have been returned when the attacks are initially listed.</pre><cite><address>line 17 character 4</address>Use spaces, not tabs.</cite><pre> * 			re-opening the window should show the updated data, or waiting for the incoming data to change.</pre><cite><address>line 19 character 4</address>Use spaces, not tabs.</cite><pre> * 			setup on the options tab.</pre><cite><address>line 23 character 1</address>Use spaces, not tabs.</cite><pre>	- added PVP+Cache</pre><cite><address>line 24 character 1</address>Use spaces, not tabs.</cite><pre>	    - stores recently touched cities for rapid access"</pre><cite><address>line 29 character 10</address>Expected exactly one space between 'function' and '('.</cite><pre>(function() {</pre><cite><address>line 30 character 5</address>Missing 'use strict' statement.</cite><pre>    var main = function() {</pre><cite><address>line 30 character 24</address>Expected exactly one space between 'function' and '('.</cite><pre>    var main = function() {</pre><cite><address>line 34 character 21</address>Combine this with the previous 'var' statement.</cite><pre>                var dungeonKill = [10, 100, 450, 1500, 3500, 6000, 13000, 20000, 35000, 60000];</pre><cite><address>line 35 character 21</address>Combine this with the previous 'var' statement.</cite><pre>                var l = qx.locale.Manager.getInstance().getLocale();</pre><cite><address>line 35 character 25</address>'qx' was used before it was defined.</cite><pre>                var l = qx.locale.Manager.getInstance().getLocale();</pre><cite><address>line 36 character 23</address>Expected '!==' and instead saw '!='.</cite><pre>                if (l != "en" || l != "de" || l != "pl")</pre><cite><address>line 36 character 36</address>Expected '!==' and instead saw '!='.</cite><pre>                if (l != "en" || l != "de" || l != "pl")</pre><cite><address>line 36 character 49</address>Expected '!==' and instead saw '!='.</cite><pre>                if (l != "en" || l != "de" || l != "pl")</pre><cite><address>line 37 character 21</address>Expected exactly one space between ')' and 'l'.</cite><pre>                    l = "en";</pre><cite><address>line 37 character 21</address>Expected '{' and instead saw 'l'.</cite><pre>                    l = "en";</pre><cite><address>line 37 character 21</address>Stopping. (0% scanned).</cite>
    <h2>\script.js (35 errors)</h2>
    <cite><address>line 11 character 4</address>Use spaces, not tabs.</cite><pre> * 			removed from BBCode the !LoU.slap and other commands as they allow an anonymous person to determine your online status.</pre><cite><address>line 13 character 4</address>Use spaces, not tabs.</cite><pre> * 			changes to incoming attacks window.  now makes use of alliance faith and displayed % is the research required by the</pre><cite><address>line 14 character 4</address>Use spaces, not tabs.</cite><pre> * 			attacking player.  - is displayed if it is believed the attack is not possible with that troop type.  a ship column has</pre><cite><address>line 15 character 4</address>Use spaces, not tabs.</cite><pre> * 			been added.  can only verify ship attacks if you are the target.  seperate requests are made to determine if</pre><cite><address>line 16 character 4</address>Use spaces, not tabs.</cite><pre> * 			source and target cities are on water.  data may not have been returned when the attacks are initially listed.</pre><cite><address>line 17 character 4</address>Use spaces, not tabs.</cite><pre> * 			re-opening the window should show the updated data, or waiting for the incoming data to change.</pre><cite><address>line 19 character 4</address>Use spaces, not tabs.</cite><pre> * 			setup on the options tab.</pre><cite><address>line 23 character 1</address>Use spaces, not tabs.</cite><pre>	- added PVP+Cache</pre><cite><address>line 24 character 1</address>Use spaces, not tabs.</cite><pre>	    - stores recently touched cities for rapid access"</pre><cite><address>line 29 character 10</address>Expected exactly one space between 'function' and '('.</cite><pre>(function() {</pre><cite><address>line 30 character 1</address>Use spaces, not tabs.</cite><pre>	var main = function() {</pre><cite><address>line 30 character 2</address>Missing 'use strict' statement.</cite><pre>	var main = function() {</pre><cite><address>line 30 character 21</address>Expected exactly one space between 'function' and '('.</cite><pre>	var main = function() {</pre><cite><address>line 31 character 1</address>Use spaces, not tabs.</cite><pre>		function LoUPakMap() {</pre><cite><address>line 31 character 3</address>Expected 'function' at column 13, not column 3.</cite><pre>		function LoUPakMap() {</pre><cite><address>line 32 character 1</address>Use spaces, not tabs.</cite><pre>			try {</pre><cite><address>line 32 character 4</address>Expected 'try' at column 17, not column 4.</cite><pre>			try {</pre><cite><address>line 33 character 1</address>Use spaces, not tabs.</cite><pre>				var bossKill = [50, 300, 2000, 4000, 10000, 15000, 20000, 30000, 45000, 60000];</pre><cite><address>line 33 character 5</address>Expected 'var' at column 21, not column 5.</cite><pre>				var bossKill = [50, 300, 2000, 4000, 10000, 15000, 20000, 30000, 45000, 60000];</pre><cite><address>line 34 character 1</address>Use spaces, not tabs.</cite><pre>				var dungeonKill = [10, 100, 450, 1500, 3500, 6000, 13000, 20000, 35000, 60000];</pre><cite><address>line 34 character 5</address>Expected 'var' at column 21, not column 5.</cite><pre>				var dungeonKill = [10, 100, 450, 1500, 3500, 6000, 13000, 20000, 35000, 60000];</pre><cite><address>line 34 character 9</address>Combine this with the previous 'var' statement.</cite><pre>				var dungeonKill = [10, 100, 450, 1500, 3500, 6000, 13000, 20000, 35000, 60000];</pre><cite><address>line 35 character 1</address>Use spaces, not tabs.</cite><pre>				var l = qx.locale.Manager.getInstance().getLocale();</pre><cite><address>line 35 character 5</address>Expected 'var' at column 21, not column 5.</cite><pre>				var l = qx.locale.Manager.getInstance().getLocale();</pre><cite><address>line 35 character 9</address>Combine this with the previous 'var' statement.</cite><pre>				var l = qx.locale.Manager.getInstance().getLocale();</pre><cite><address>line 35 character 13</address>'qx' was used before it was defined.</cite><pre>				var l = qx.locale.Manager.getInstance().getLocale();</pre><cite><address>line 36 character 1</address>Use spaces, not tabs.</cite><pre>				if (l != "en" || l != "de" || l != "pl")</pre><cite><address>line 36 character 5</address>Expected 'if' at column 21, not column 5.</cite><pre>				if (l != "en" || l != "de" || l != "pl")</pre><cite><address>line 36 character 11</address>Expected '!==' and instead saw '!='.</cite><pre>				if (l != "en" || l != "de" || l != "pl")</pre><cite><address>line 36 character 24</address>Expected '!==' and instead saw '!='.</cite><pre>				if (l != "en" || l != "de" || l != "pl")</pre><cite><address>line 36 character 37</address>Expected '!==' and instead saw '!='.</cite><pre>				if (l != "en" || l != "de" || l != "pl")</pre><cite><address>line 37 character 1</address>Use spaces, not tabs.</cite><pre>					l = "en";</pre><cite><address>line 37 character 6</address>Expected exactly one space between ')' and 'l'.</cite><pre>					l = "en";</pre><cite><address>line 37 character 6</address>Expected '{' and instead saw 'l'.</cite><pre>					l = "en";</pre><cite><address>line 37 character 6</address>Stopping. (0% scanned).</cite>

</body>
</html>
